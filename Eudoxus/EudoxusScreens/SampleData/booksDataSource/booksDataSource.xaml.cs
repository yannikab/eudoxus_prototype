//      *********    DO NOT MODIFY THIS FILE     *********
//      This file is regenerated by a design tool. Making
//      changes to this file can cause errors.
namespace Expression.Blend.SampleData.booksDataSource
{
	using System; 

// To significantly reduce the sample data footprint in your production application, you can set
// the DISABLE_SAMPLE_DATA conditional compilation constant and disable sample data at runtime.
#if DISABLE_SAMPLE_DATA
	internal class institution { }
#else

	public class institution : System.ComponentModel.INotifyPropertyChanged
	{
		public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

		protected virtual void OnPropertyChanged(string propertyName)
		{
			if (this.PropertyChanged != null)
			{
				this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
			}
		}

		public institution()
		{
			try
			{
				System.Uri resourceUri = new System.Uri("/Eudoxus.Screens;component/SampleData/booksDataSource/booksDataSource.xaml", System.UriKind.Relative);
				if (System.Windows.Application.GetResourceStream(resourceUri) != null)
				{
					System.Windows.Application.LoadComponent(this, resourceUri);
				}
			}
			catch (System.Exception)
			{
			}
		}

		private string _name = string.Empty;

		public string name
		{
			get
			{
				return this._name;
			}

			set
			{
				if (this._name != value)
				{
					this._name = value;
					this.OnPropertyChanged("name");
				}
			}
		}

		private department _department = new department();

		public department department
		{
			get
			{
				return this._department;
			}

			set
			{
				if (this._department != value)
				{
					this._department = value;
					this.OnPropertyChanged("department");
				}
			}
		}
	}

	public class department : System.ComponentModel.INotifyPropertyChanged
	{
		public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

		protected virtual void OnPropertyChanged(string propertyName)
		{
			if (this.PropertyChanged != null)
			{
				this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
			}
		}

		private string _name = string.Empty;

		public string name
		{
			get
			{
				return this._name;
			}

			set
			{
				if (this._name != value)
				{
					this._name = value;
					this.OnPropertyChanged("name");
				}
			}
		}

		private semester _semester = new semester();

		public semester semester
		{
			get
			{
				return this._semester;
			}

			set
			{
				if (this._semester != value)
				{
					this._semester = value;
					this.OnPropertyChanged("semester");
				}
			}
		}
	}

	public class semester : System.ComponentModel.INotifyPropertyChanged
	{
		public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

		protected virtual void OnPropertyChanged(string propertyName)
		{
			if (this.PropertyChanged != null)
			{
				this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
			}
		}

		private string _name = string.Empty;

		public string name
		{
			get
			{
				return this._name;
			}

			set
			{
				if (this._name != value)
				{
					this._name = value;
					this.OnPropertyChanged("name");
				}
			}
		}

		private course _course = new course();

		public course course
		{
			get
			{
				return this._course;
			}

			set
			{
				if (this._course != value)
				{
					this._course = value;
					this.OnPropertyChanged("course");
				}
			}
		}
	}

	public class course : System.ComponentModel.INotifyPropertyChanged
	{
		public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

		protected virtual void OnPropertyChanged(string propertyName)
		{
			if (this.PropertyChanged != null)
			{
				this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
			}
		}

		private string _name = string.Empty;

		public string name
		{
			get
			{
				return this._name;
			}

			set
			{
				if (this._name != value)
				{
					this._name = value;
					this.OnPropertyChanged("name");
				}
			}
		}

		private bookCollection _bookCollection = new bookCollection();

		public bookCollection bookCollection
		{
			get
			{
				return this._bookCollection;
			}
		}
	}

	public class book : System.ComponentModel.INotifyPropertyChanged
	{
		public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

		protected virtual void OnPropertyChanged(string propertyName)
		{
			if (this.PropertyChanged != null)
			{
				this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
			}
		}

		private double _code = 0;

		public double code
		{
			get
			{
				return this._code;
			}

			set
			{
				if (this._code != value)
				{
					this._code = value;
					this.OnPropertyChanged("code");
				}
			}
		}

		private string _title = string.Empty;

		public string title
		{
			get
			{
				return this._title;
			}

			set
			{
				if (this._title != value)
				{
					this._title = value;
					this.OnPropertyChanged("title");
				}
			}
		}

		private string _author = string.Empty;

		public string author
		{
			get
			{
				return this._author;
			}

			set
			{
				if (this._author != value)
				{
					this._author = value;
					this.OnPropertyChanged("author");
				}
			}
		}

		private string _publisher = string.Empty;

		public string publisher
		{
			get
			{
				return this._publisher;
			}

			set
			{
				if (this._publisher != value)
				{
					this._publisher = value;
					this.OnPropertyChanged("publisher");
				}
			}
		}

		private double _pages = 0;

		public double pages
		{
			get
			{
				return this._pages;
			}

			set
			{
				if (this._pages != value)
				{
					this._pages = value;
					this.OnPropertyChanged("pages");
				}
			}
		}

		private string _isbn = string.Empty;

		public string isbn
		{
			get
			{
				return this._isbn;
			}

			set
			{
				if (this._isbn != value)
				{
					this._isbn = value;
					this.OnPropertyChanged("isbn");
				}
			}
		}

		private System.Windows.Media.ImageSource _cover = null;

		public System.Windows.Media.ImageSource cover
		{
			get
			{
				return this._cover;
			}

			set
			{
				if (this._cover != value)
				{
					this._cover = value;
					this.OnPropertyChanged("cover");
				}
			}
		}
	}

	public class bookCollection : System.Collections.ObjectModel.ObservableCollection<book>
	{ 
	}
#endif
}
